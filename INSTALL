LUMASS installation guide
+++++++++++++++++++++++++


Requirements / Prerequisites
============================

LUMASS is currently only available for Linux operating systems. However, it is
entirely built on cross-platform libraries and could potentially run on other
operating systems and platforms as well. LUMASS is being developed and tested 
on (K)Ubuntu Linux, and the remainder of this installation guide refers to an
Ubuntu installation. Please adjust the described steps accordingly to meet the
requirements of your favourite Linux distribution (and feel free to share any
adjusted installation guides for other distributions / operating systems!).


required 3rd party software libraries / packages
------------------------------------------------

LUMASS relies on a number of other open source software libraries, which are
required (except rasdaman/PostgreSQL) to successfully build LUMASS. 

Qt                      version > 5; tested against Qt5.2.1;
                        required modules: Qt5Widgets, Qt5Core, Qt5Gui,
                        Qt5Concurrent, Qt5Xml

GDAL                    see launchpad repository: unbuntu-gis-unstable 
                        <https://launchpad.net/~ubuntugis/+archive/ubuntugis-unstable>

Orfeo Toolbox           3.16 <= version <= 3.20 (recommended); download at
                        http://sourceforge.net/projects/orfeo-toolbox/files/OTB/ ;
                        or see launchpad repository: unbuntu-gis-unstable
                        <https://launchpad.net/~ubuntugis/+archive/ubuntugis-unstable>;

VTK                     version >= 6; tested against 6.1.0; required modules vtkCommonCore,
                        vtkCommonDataModel, vtkFiltersGeneric, vtkRenderingCore,
                        vtkRenderingAnnotation, vtkRenderingImage, vtkGUISupportQt,
                        vtkImagingStatistics, vtkIteractionWidgets, vtkIOCore,
                        vtkIOInfovis, vtkIOSQL, vtkIOLegacy, vtkIOXML

                        NOTE:
                        While compiling VTK, please make sure you enable the build of
                        Module_vtkGUISupportQt (i.e. set to 'ON'), which becomes
                        available once you've toggled [t] the advanced mode.

rasdaman                this package is optional and only useful, if you intend
                        to use the LUMASS modelling framework; if you're only 
                        interested in spatial optimisation, you don't need this 
                        package; see rasdaman.org for download, compilation and
                        installation details as well as for rasdaman features

PostgreSQL              only required when rasdaman is going to be used with the
                        modelling framework 
			
lp_solve /
liblpsolve55-dev        required for LUMASS' optimisation component 

cmake/
cmake-curses-gui        build system packages used to compile LUMASS (s. below)



Some of the above mentioned packages/libraries are available as Debian
(Ubuntu) packages and can be installed via your favourite package manager. 
For Orfeo and GDAL you have to add the launchpad-repository 'unbuntu-gis-unstable'
(see URL above) to make the packages available via your package manager. 
You will also need the 'build-essentials' package for compiling LUMASS from 
source. Installing the above mentioned packages should resolve most of the 
library dependencies.


Building LUMASS from source
---------------------------

1. create a directory for LUMASS' binary files 

   $ mkdir lumass-bin
   $ cd lumass-bin

2. run ccmake to configure the software and generate the Makefile

   $ ccmake /path/to/lumass/source/directory

   (inside the ccmake UI)

   - Press [c] to configure
   - adjust any path entries if required (you can safely ignore 
     'OTB_APPLICATION_LAUNCHER-NOT') 
   - set RASSUPPORT to OFF, if you don't want to build LUMASS with rasdaman 
     support) 
   - Press [c] to configure (again)
   - Press [g] to generate the Makefile and exit ccmake

3. call make (you may want to use multiple cores during the build by specifying  
   the -j options)  

   $ make -j 4 			# ‚Üê uses 4 cores

4. you're good to go now!


Feel free to consult the lumass-users group (https://groups.google.com/forum/#!forum/lumass-users)
for help if you encounter any issues with the installation process.
   
